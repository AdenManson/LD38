<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_sapling</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-3</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>placed = false;
image_alpha = .4;
i = 0;

centerx = obj_planet.x;
centery = obj_planet.y;
radius = 218;
angle = point_direction(obj_planet.x,obj_planet.y,mouse_x,mouse_y);
rotspeed = obj_planet.rotspeed;

grown = false;
die = false;

j = 0;

image_xscale = random_range(.6,1);
image_yscale = image_xscale;

clicked = false;
showgui = false;

k = 0;

startoxygen = true;

_lives = choose(6,7);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>startoxygen = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>grown = true;
j = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Rotation
if(!placed) {
    x = obj_planet.x+lengthdir_x(218,point_direction(obj_planet.x,obj_planet.y,mouse_x,mouse_y));
    y = obj_planet.y+lengthdir_y(218,point_direction(obj_planet.x,obj_planet.y,mouse_x,mouse_y));
    image_angle = point_direction(obj_planet.x,obj_planet.y,mouse_x,mouse_y);
    angle = point_direction(obj_planet.x,obj_planet.y,mouse_x,mouse_y);
}
else 
{
    angle += rotspeed;
    angle = angle mod 360
    
    if (angle &lt; 0) { angle += 360 }
    
    x = centerx + lengthdir_x(radius,angle);
    y = centery + lengthdir_y(radius,angle);
    
    image_angle = angle;
    rotspeed = obj_planet.rotspeed;
    
    if(k = 0) {
        image_alpha = 1;
        k = 1;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Delete if icon is deselected
if(!placed) &amp;&amp; (obj_tree_icon.selected == false) instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Growth
if(placed) &amp;&amp; (!grown) {
    if(j = 0) {
        alarm[0] = random_range(800,1000);
        j = 1;
    }
}

if(grown) {
    sprite_index = spr_tree;
} else {
    sprite_index = spr_sapling;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Death
if(die) &amp;&amp; (grown) {
    if(_lives &gt; 0) {
        grown = false;
        die = false;
        _lives--;
        
        repeat(3) { instance_create(x+random(60),y+random(60),obj_xp); }
        repeat(choose(1,1,1,2)) { instance_create(x+random(60),y+random(60),obj_log); }
    } else {
        instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Start Oxygen Emmition
if(grown) {  
    if(startoxygen) {
        global.oxygen += global.oxygenamount;
        alarm[1] = 400;
        startoxygen = false;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(instance_exists(obj_tree_icon)) {
    if(i == 1) &amp;&amp; (obj_tree_icon.selected == true) {
        placed = true;
        obj_tree_icon.selected = false;
        
        scr_cost(obj_tree_icon.price);
        audio_play_sound(s_click,1,0);
        
        if(instance_number(obj_oxygenamount) &lt; 1) instance_create(0,0,obj_oxygenamount);
    }
}
i++;

if(placed) &amp;&amp; (clicked) {
    if(!position_meeting(mouse_x,mouse_y,self) &amp;&amp; 
    (!position_meeting(mouse_x,mouse_y,obj_sidebar)) &amp;&amp;
    (!position_meeting(mouse_x,mouse_y,obj_sidebar_arrow)) &amp;&amp;
    (!position_meeting(mouse_x,mouse_y,obj_worker_icon)) &amp;&amp;
    (!position_meeting(mouse_x,mouse_y,obj_tree_icon)) &amp;&amp;
    (!position_meeting(mouse_x,mouse_y,obj_fire_icon)) &amp;&amp;
    (!position_meeting(mouse_x,mouse_y,obj_log_icon)) &amp;&amp;
    (!position_meeting(mouse_x,mouse_y,obj_worker)) &amp;&amp;
    (!position_meeting(mouse_x,mouse_y,obj_speed)))
    {
        clicked = false;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(placed){
    image_alpha = 1;
    showgui = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(placed) {
    image_alpha = .6;
    showgui = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!clicked) {
    for(var i=0; i&lt;instance_number(obj_sapling); i++) {
        var inst = instance_find(obj_sapling,i);
        inst.clicked = false;
    }
}

clicked = !clicked;
audio_play_sound(s_select,1,false);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();
draw_set_alpha(1);
draw_set_colour(c_white);
if(showgui) &amp;&amp; (grown) {
    draw_set_font(ft_gui_smaller);
    draw_set_halign(fa_center);
    draw_text(mouse_x,mouse_y-20,"Ready to harvest");
    draw_text(mouse_x,mouse_y-40,"Producing Oxygen (" + string(global.oxygenamount) + "): " + string(alarm[1]));
}

if(showgui) &amp;&amp; (!grown) {
    draw_set_font(ft_gui_smaller);
    draw_set_halign(fa_center);
    draw_text(mouse_x,mouse_y-20,"Growth Stage: " + string(alarm[0]));
}

if(clicked) &amp;&amp; (placed) {
    image_blend = make_colour_rgb(111,219,255);
} else {
    image_blend = c_white;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>0</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0</PhysicsObjectFriction>
  <PhysicsObjectAwake>0</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
