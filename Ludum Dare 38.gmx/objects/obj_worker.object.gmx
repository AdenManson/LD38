<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_worker</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-4</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>centerx = obj_planet.x;
centery = obj_planet.y;
rotspeed = choose(-.4,0,.4);
radius = 218;
angle = irandom(360);


fireinst = instance_nearest(x,y,obj_fire);

alarm[0] = random_range(80,200);

image_index = random_range(0,2);
image_speed = 0.1;

image_xscale = .6;
image_yscale = image_xscale;

canmove = true;

selected = false;
subimg = 0;
i = 0;

chop = false;
finished_chopping = false;
j = 0;
inst = 0;
dir = 0;
target = noone;
k = 0;
global.clamptarget = 0;
chopdelay = 0;

sapling = 0;

workers[] = 0;

alarm[4] = 16;

l = 0;

/// EXP per second
exppersecond = 1;
showgui = false;

seconds = 0;
steps = 0;
amount = 1;

// Fire
inst = 0;
nearestfire = 0;
increasepeople = true;
gotofire = false;
if(obj_day.seconds &gt;= 275) &amp;&amp; (obj_day.seconds &lt; 360) {  
    atfire = true;
} else {
    atfire = false;
}
n = 0;

startnightdeath = false;
shouldfade = true;
fadeout = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="9">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(canmove == true) &amp;&amp; (obj_day.seconds &gt;= 275) &amp;&amp; (obj_day.seconds &lt; 360) {
    if(shouldfade) {
        fadeout = true;
        shouldfade = false;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="8">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Chop Delay
chop = true;
rotspeed = 0;
show_debug_message("OK");
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// EXP Per Second
global.xp += exppersecond;
a = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="6">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>selected = false;
inst.clicked = false;
chop = true;
k = 0;
dir = 0;
chopdelay = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Oxygen Death
if(global.oxygen &lt;= 0) {
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Oxygen
global.oxygen--;
alarm[4] = 16;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Stop Chopping
chop = false;
var newinst = instance_nearest(x,y,obj_sapling);
newinst.die = true;

sprite_index = spr_worker;
image_speed = .1;
j = 0;
global.clamptarget = 0;

canmove = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Selected Arrow Animation
i = 0;
if(subimg &lt; 6) {
    subimg++;
} else {
    subimg = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(canmove) { rotspeed = choose(-.4,0,.4); }
alarm[0] = random_range(80,200);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>rotspeed = 0;
alarm[1] = random_range(20,80);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Rotation
angle += rotspeed;
angle = angle mod 360

if (angle &lt; 0) { angle += 360 }

x = centerx + lengthdir_x(radius,angle);
y = centery + lengthdir_y(radius,angle);

image_angle = angle;

if(rotspeed == 0) rotspeed = obj_planet.rotspeed;

if(selected) || (chop) {
    rotspeed = obj_planet.rotspeed;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Selection Sapling
if(selected) &amp;&amp; (instance_exists(obj_sapling)) {
    if(i = 0) {
        alarm[2] = 5;
        i = 1;
    }
}


if (global.clamptarget = 0) &amp;&amp; (instance_exists(obj_sapling)) {
    inst = instance_nearest(mouse_x,mouse_y,obj_sapling);
}

if(inst != noone) &amp;&amp; (instance_exists(obj_sapling)) {
    if(inst.placed) &amp;&amp; (inst.grown) &amp;&amp; (inst.clicked) &amp;&amp; (selected) {
    
        global.clamptarget = 1;
        target = inst.angle;
        
        if(angle &lt;= target) {
            dir = 1;
        }
        if(angle &gt; target) {
            dir = -1;
        }
        
        if(place_meeting(x,y,inst)) {
            canmove = false;
            if(k = 0) {
                alarm[6] = 30;
                k = 1;
            }
        }   
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Selection Fire
if(instance_exists(obj_fire)) {

    if (global.clampfiretarget = 0) {
        fireinst = instance_nearest(mouse_x,mouse_y,obj_fire);
    }
    if(fireinst != noone) {
        if(fireinst.placed) &amp;&amp; (!fireinst.burning) &amp;&amp; !(fireinst.ignited) &amp;&amp; (fireinst.clicked) &amp;&amp; (selected) {
            
            global.clampfiretarget = 1;
            target = fireinst.angle;
            
            if(angle &lt;= fireinst.angle) {
                dir = 1;
            }
            if(angle &gt; fireinst.angle) {
                dir = -1;
            }
            
            if(place_meeting(x,y,fireinst)) {
                selected = false;
                fireinst.clicked = false;
                global.clampfiretarget = 0;
            }   
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Chopping
if(chop) {
    sprite_index = spr_worker_chop;
    image_speed = .2;
    
    if(j = 0) {
        alarm[3] = 100;
        j = 1;
    }
}

if(!selected) {
    chop = false;
    p = 0;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Oxygen Death
if(global.oxygen &lt;= 0) {
    if(l = 0) {
        alarm[5] = random_range(100,200);
        l = 1;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Walking towards tree
if(dir = 1) angle+=.8;
if(dir = -1) angle-=.8;

if(!chop) dir = 0;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// EXP per second
   
steps += amount;
if(steps &gt;= room_speed) {
    steps = 0;
    seconds += (delta_time/1000000)*room_speed;
}

if(seconds &gt;= 5) {
    global.xp += exppersecond;
    seconds = 0;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Stand by campfire
if(instance_exists(obj_fire)) {
    if(obj_day.seconds &gt;= 275) &amp;&amp; (obj_day.seconds &lt; 360) {
        if(instance_exists(obj_fire)) {
        
        for(var n=0; n&lt;instance_number(obj_fire); n++) {
            var checkfire = instance_find(obj_fire,n);
                if(checkfire.burning) {
                    nearestfire = checkfire;
                } else {
                    nearestfire = instance_nearest(x,y,obj_fire);
                }      
            }
            if(nearestfire.people) &lt; (nearestfire.maxpeople) {
                if(nearestfire.burning) || (nearestfire.ignited) {
                    atfire = true;
                        
                    if(increasepeople) {
                        show_debug_message("Increase People");
                        nearestfire.people++;
                        increasepeople = false;
                    }
                }
            } else { global.clampfiretarget = 0; }
        }
    } else { atfire = false; }
    
    if(obj_day.resetday) increasepeople = true;
    
    if(atfire) &amp;&amp; (instance_exists(obj_fire)) {
        if(distance_to_object(nearestfire) &lt; 10) { 
            dir = 0;
            canmove = false;
        } else {
            if(angle &lt;= nearestfire.angle) {
                dir = 1;
            }
            if(angle &gt; nearestfire.angle) {
                dir = -1;
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Death by night
if(obj_day.seconds &gt;= 275) &amp;&amp; (obj_day.seconds &lt; 360) &amp;&amp; (canmove)  {
    if(startnightdeath = false) {
        alarm[9] = 500;
        startnightdeath = true;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Fade Out (Darkness Death)
if(fadeout) {
    if(image_alpha &gt; 0) {
        image_alpha -= 0.02;
    }
    
    if(image_alpha &lt;= .2) image_blend = c_black;
    if(image_alpha &lt;= 0) instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!position_meeting(mouse_x,mouse_y,self) &amp;&amp; (!position_meeting(mouse_x,mouse_y,obj_sidebar))
&amp;&amp; (!position_meeting(mouse_x,mouse_y,obj_sidebar_arrow))
&amp;&amp; (!position_meeting(mouse_x,mouse_y,obj_worker_icon))
&amp;&amp; (!position_meeting(mouse_x,mouse_y,obj_tree_icon))
&amp;&amp; (!position_meeting(mouse_x,mouse_y,obj_fire_icon))
&amp;&amp; (!position_meeting(mouse_x,mouse_y,obj_log_icon))
&amp;&amp; (!position_meeting(mouse_x,mouse_y,obj_sapling))
&amp;&amp; (!position_meeting(mouse_x,mouse_y,obj_fire))
&amp;&amp; (!position_meeting(mouse_x,mouse_y,obj_speed)))
{
    selected = false;
    if(!chop) global.clamptarget = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_alpha = 1;
showgui = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_alpha = .6;
showgui = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!selected) {
    for(var i=0; i&lt;instance_number(obj_worker); i++) {
        var inst = instance_find(obj_worker,i);
        inst.selected = false;
    }
}

selected = !selected;
audio_play_sound(s_select,1,false);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_colour(c_black);
draw_set_alpha(.1);
draw_circle(x,y,8,0);
draw_set_colour(c_white);
draw_set_alpha(1);
draw_self();

if(selected) draw_sprite_ext(spr_selected,subimg,x,y,1,1,angle,c_white,1);

if(showgui) {
    draw_set_font(ft_gui_smaller);
    draw_set_halign(fa_center);
    draw_text(mouse_x,mouse_y-20, "EXP: " + string(exppersecond) + " Per 5 Seconds");
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
